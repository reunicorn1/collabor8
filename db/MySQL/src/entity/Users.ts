import { Entity, PrimaryGeneratedColumn, Index, Column, CreateDateColumn,
  UpdateDateColumn,  OneToMany } from "typeorm";
import { Projects } from "./Projects";
import { ProjectShares } from "./ProjectShares";

@Entity({ name: "Users" })
@Index("idx_username", ["username"], { unique: true })
export class Users {
    
    @PrimaryGeneratedColumn("uuid")
    user_id: string; // UUID autogenerated
    
    @Column({ type: "varchar", length: 50, unique: true })
    username: string;
    
    @Column({ type: "varchar", length: 100, unique: true })
    email: string;
    
    @Column({ type: "varchar", length: 255 })
    password_hash: string;
    
    @Column({ type: "uuid", nullable: true })
    environment_id: string | null;
    
    @CreateDateColumn({ type: "timestamp", default: () => "CURRENT_TIMESTAMP" })
    created_at: Date;

    @UpdateDateColumn({ type: "timestamp", default: () => "CURRENT_TIMESTAMP" })
    updated_at: Date;

    @OneToMany(() => Projects, project => project.owner)
    ownedProjects: Projects[]; // Projects owned by the user

    @OneToMany(() => ProjectShares, projectShare => projectShare.user)
    projectShares: ProjectShares[]; // Project shares associated with the user

}

